<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-autowire="byName" default-lazy-init="false">

	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${hibernate.connection.driver}</value>
		</property>
		<property name="url">
			<value>${hibernate.connection.url}</value>
		</property>
		<property name="username">
			<value>${hibernate.connection.username}</value>
		</property>
		<property name="password">
			<value>${hibernate.connection.password}</value>
		</property>
		<property name="initialSize"><value>1</value></property> 
		<property name="maxActive"><value>30</value></property> 
		<property name="removeAbandoned"><value>true</value></property> 
		<property name="maxWait"><value>500</value></property> 
		<property name="maxIdle"><value>10</value></property> 
		<property name="minIdle"><value>5</value></property> 
	</bean>

	<bean id="dataSourceForMTS" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${mts.connection.driver}</value>
		</property>
		<property name="url">
			<value>${mts.connection.url}</value>
		</property>
		<property name="username">
			<value>${mts.connection.username}</value>
		</property>
		<property name="password">
			<value>${mts.connection.password}</value>
		</property>
	</bean>
	
	<bean id="jdbcTemplateForMTS" class="org.springframework.jdbc.core.JdbcTemplate"> 
        <property name="dataSource">
			<ref local="dataSourceForMTS"/>
        </property> 
	</bean> 

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml" />
		<property name="schemaUpdate" value="false" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.connection.pool_size">25</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">
					true
				</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
				<prop key="hibernate.hibernate.cache.use_query_cache">
					true
				</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.autoReconnect">true</prop>
			</props>
		</property>
		<property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> 
        <property name="dataSource">
			<ref local="dataSource"/>
        </property> 
	</bean> 

	<!-- setup transaction manager	-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven />

	<!-- 支持 @AspectJ 标记-->
	<aop:aspectj-autoproxy />

	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* cn.clickvalue.cv2.services.dao.hibernate.*Dao.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor
			pointcut="execution(* cn.clickvalue.cv2.services.logic..*Service.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置.
		默认的设置请参考Spring文档事务一章. -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="*" rollback-for="java.lang.Exception,java.lang.reflect.InvocationTargetException" />
		</tx:attributes>
	</tx:advice>
</beans>
